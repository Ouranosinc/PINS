project:
  name: PINS
  version: 2.0.0
  description: PINS
  id: pins

workflow:
  jupy: True
  overwrite: True
  # overwrite: False

cat_attrs: 
  version: ${project.version}
  bias_adjust_project: ${project.id}


tasks:
####- initialize_pcat # only activate this task the first time you run the workflow to create the ProjectCatalog
- makeref
# - initialize_pcat
- extract_reference
- extract_simulation
- regrid
- rechunk
- raw_individual_indicator
- raw_indicators
- decay
- train
- adjust
- diagnostics
- individual_indicator
- indicators
- climatology
- ensemble


selected_ids: 
 - 'CMIP5_CORDEX_MPI-M-MPI-ESM-LR_UQAM_UQAM-CRCM5_rcp45_r1i1p1_NAM-44',
 - 'CMIP5_MRCC5_CNRM-CM5_OURANOS_CRCM5_rcp45_r1i1p1_NAM-22',
 - 'CMIP5_MRCC5_GFDL-ESM2M_OURANOS_CRCM5_rcp45_r1i1p1_NAM-22',
 - 'CMIP5_MRCC5_MPI-ESM-LR_OURANOS_CRCM5_rcp45_r1i1p1_NAM-22',
 - 'CMIP5_MRCC5_CNRM-CM5_OURANOS_CRCM5_rcp85_r1i1p1_NAM-22',
 - 'CMIP5_MRCC5_GFDL-ESM2M_OURANOS_CRCM5_rcp85_r1i1p1_NAM-22',
 - 'CMIP5_CORDEX_MOHC-HadGEM2-ES_ISU_ISU-RegCM4_rcp85_r1i1p1_NAM-22',
 - 'CMIP5_CORDEX_MPI-M-MPI-ESM-LR_NCAR_NCAR-RegCM4_rcp85_r1i1p1_NAM-22',
 - 'CMIP5_MRCC5_MPI-ESM-LR_OURANOS_CRCM5_rcp85_r1i1p1_NAM-22',
 - 'CMIP5_CORDEX_NOAA-GFDL-GFDL-ESM2M_NCAR_WRF_rcp85_r1i1p1_NAM-22'

dask:
  client:
    local_directory: &dask_dir ${paths.dask}
    dashboard_address: 8089
  array.slicing.split_large_chunks: False
  use_dask: false
  default_dask_kwargs : &default_dask_kwargs
    n_workers: 5
    threads_per_worker: 3
    memory_limit: "7GB"
    local_directory: *dask_dir

# All these kws can be changed in each processing-level
save_kwargs: &savekws
  overwrite: True
  schemas: ${schemas.schema}
  save_dir: ${paths.exec_wdir}
  tmp_dir: ${paths.exec_wdir}
  overwrite: True
  simple_saving: False

custom:
  overwrite: False
  delete_in_final_zarr: False
  delete_in_diag: True
  regions:
    QC:
      name: QC
      method: bbox
      tile_buffer: 1.5
      lon_bnds: [-79.765247, -56.934953]
      lat_bnds: [44.991361, 62.582585]
    # test_QC_region:
    #   name: test_QC
    #   method: bbox
    #   tile_buffer: 1.5
    #   lon_bnds: [-75, -73.5]
    #   lat_bnds: [48.5, 50]
  ref_period: &ref_period
    - '1991'
    - '2020'
  sim_period: &sim_period
    - '1950'
    - '2100'

extract_reference:
  io: 
    output: 
      processing_level: extracted
  search_data_catalogs:
    variables_and_freqs:
      snw: D
    periods: *ref_period
    other_search_criteria:
      source: &ref_source "ERA5-Land"
    data_catalogs: ${paths.catalogs}/reconstruction.json
    allow_conversion: True
    allow_resampling: False
  extract_dataset:
    periods: *ref_period
    xr_combine_kwargs:
      combine_attrs: override
    xr_open_kwargs:
      drop_variables:
      - height
      chunks:
        lat: -1
        lon: -1
        time: 365
  chunks:
    lat: -1
    lon: -1
    time: 365    
  dask_kwargs: &extract_dask
    n_workers: 5
    threads_per_worker: 3
    memory_limit: "7GB"
    local_directory: *dask_dir

extract_simulation:
  io: 
    output: 
      processing_level: extracted
  chunks:
    rlat: -1
    rlon: -1
    time: 365
  search_data_catalogs:
    variables_and_freqs:
      snw: D
    data_catalogs: ${paths.catalogs}/simulation.json
    match_hist_and_fut: True
    allow_conversion: True
    allow_resampling: True
    restrict_members:
      ordered: 1
    periods: *sim_period
    other_search_criteria:
      experiment:
        - ssp245
        - ssp370
        - ssp585
  extract_dataset:
    periods: *sim_period
    xr_combine_kwargs:
      combine_attrs: override
    xr_open_kwargs:
      drop_variables:
      - height
      chunks:
        rlat: -1
        rlon: -1
        time: 365
  dask_kwargs: *extract_dask

regrid:
  dask_kwargs:
    n_workers: 4
    threads_per_worker: 4
    memory_limit: "4GB"
    local_directory: *dask_dir
  io: 
    input:
      processing_level: extracted
    input_ref:
      source: *ref_source
      processing_level: extracted
    output:
      processing_level: regridded
      version: v2.0
      bias_adjust_project: QMdec
    wildcards: &wild_id
      input: 
        id: sim_id
      output: 
        id: sim_id
  regrid_dataset:
    regridder_kwargs:
      method: bilinear
      skipna: True
    weights_location: ${paths.weightsdir}

rechunk:
  io:
    input:
      processing_level: regridded
    output:
      processing_level: rechunked
    wildcards: *wild_id
  chunks:
    time: -1
    lon: 30
    lat: 30
  dask_kwargs:
    n_workers: 2
    threads_per_worker: 4
    memory_limit: 12GB
    local_directory: *dask_dir

raw_individual_indicator: 
  io: 
    input: 
      processing_level: rechunked
    output:
      processing_level: raw_individual_indicator
    wildcards: 
      input: 
        id: sim_id
      output: 
        id: sim_id
        variable: var
        xrfreq: xrfreq
  load_xclim_module:
    filename: ${paths.indicators}
    reload: True
  save_kwargs: 
    schemas: ${schemas.schema_xrfreq}
  dask_kwargs: *default_dask_kwargs

raw_indicators: 
  io: 
    input: 
      processing_level: raw_individual_indicator
    output:
      processing_level: raw_indicators
    wildcards: 
      input: 
        id: sim_id
        xrfreq: xrfreq
      output: 
        id: sim_id
        xrfreq: xrfreq
  save_kwargs: 
    schemas: ${schemas.schema_xrfreq_no_var}
    simple_saving: True 
  dask_kwargs: *default_dask_kwargs

decay:
  dask_kwargs:
    n_workers: 5
    threads_per_worker: 3
    memory_limit: "7GB"
    local_directory: *dask_dir
  io:
    input:
      processing_level: "rechunked"
      type: "simulation"
    output:
      processing_level: "decayed"
      type: "simulation"
    wildcards: *wild_id

  decay_snow_season_end:
    decay_factor: 0.5
    thresh_decay: "1e-3 kg m-2"
    thresh_sse: "1 kg m-2"
    window_sse: 14

# meta-config for train and adjust
biasadjust:
  variables:
    snw:
      training_args:
        var: snw
        period: *ref_period
        method: EmpiricalQuantileMapping
        group:
          group: time.dayofyear
          window: 15
        jitter_under:
          thresh: 1e-8 kg m-2
        xsdba_train_args:
          nquantiles:
            start: 0.05
            stop: 1
            step: 0.02
          kind: "*"
          adapt_freq_thresh: 1e-4 kg m-2
      adjusting_args:
        periods: *sim_period
        xsdba_adjust_args:
          interp: linear # this was nearest before, I recommend linear
          extrapolation: constant
        bias_adjust_institution: &b_a_inst Ouranos
        bias_adjust_project: &b_a_pro PINS
  dask_kwargs:
    n_workers: 5
    threads_per_worker: 3
    memory_limit: "7GB"
    local_directory: *dask_dir

train:
  io:
    input: 
      processing_level: decayed
    input_ref:
      processing_level: rechunked
      type: reconstruction
    output:
      processing_level: trained
    wildcards:
      input: 
        id: sim_id
      output: 
        id: sim_id
        bias_adjust_project: var
  variables: ${biasadjust.variables}
  dask_kwargs: ${biasadjust.dask_kwargs}

adjust:
  io: 
    input: 
      processing_level: decayed
    input_ref: 
      processing_level: trained
    output:
      processing_level: biasadjusted
    wildcards: 
      input: 
        id: sim_id
      input_ref: 
        id: sim_id
        bias_adjust_project: var
      output: 
        id: sim_id
        bias_adjust_project: var
  variables: ${biasadjust.variables}
  dask_kwargs: ${biasadjust.dask_kwargs}

individual_indicator:
  io:
    input: 
      processing_level: biasadjusted
    output:
      processing_level: individual_indicator
    wildcards: 
      input: 
        id: sim_id
      output: 
        id: sim_id
        variable: var
        xrfreq: xrfreq
  save_kwargs:
    schemas: ${schemas.schema_xrfreq}
  load_xclim_module:
    filename: ${paths.indicators}
    reload: True
  dask_kwargs: *default_dask_kwargs

indicators:
  io: 
    input: 
      processing_level: individual_indicator
    output:
      processing_level: indicators
    wildcards: 
      input: 
        id: sim_id
        xrfreq: xrfreq
      output: 
        id: sim_id
        xrfreq: xrfreq
  save_kwargs:
    schemas: ${schemas.schema_xrfreq_no_var}
    simple_saving: True
  dask_kwargs: *default_dask_kwargs

climatology:
  io: 
    input: 
      processing_level: indicators
    output:
      processing_level: climatology
    wildcards: 
      input: 
        id: sim_id
        xrfreq: xrfreq
      output: 
        id: sim_id
        xrfreq: xrfreq
  save_kwargs:
    schemas: ${schemas.schema_xrfreq}
    simple_saving: True
  dask_kwargs: *default_dask_kwargs
  climatological_op:
    window: 30
    stride: 10
  chunks:
    time: -1
    lon: 30
    lat: 30

ensemble:
  io: 
    input: 
      processing_level: climatology
    output:
      processing_level: ensemble-climatology
    wildcards:
      input: 
        xrfreq: xrfreq
      output: 
        xrfreq: xrfreq
  ensemble_stats:
    statistics:
      ensemble_mean_std_max_min: {}
  save_kwargs:
    schemas: ${schemas.schema_xrfreq}
    simple_saving: True
  dask_kwargs: *default_dask_kwargs